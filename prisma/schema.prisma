// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int        @id @default(autoincrement())
  firstName           String
  secondName          String
  hashedPassword      String
  email               String     @unique
  registrationNumber  String     @unique
  userType            UserType
  exams               Exam[]     @relation("UserExams")
  createdExams        Exam[]     @relation("UserCreatedExams")
  clusters            Cluster[]  @relation("ClusterAuthor")
  examOpenings        ExamOpening[] 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  }

model Exam {
  id                  Int          @id @default(autoincrement())
  title               String
  author              User         @relation("UserExams", fields: [authorId], references: [id])
  authorId            Int
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  file                String
  category            ExamCategory
  level               ExamLevel
  createdBy           User         @relation("UserCreatedExams", fields: [createdById], references: [id])
  createdById         Int
  clusters            Cluster[]    @relation("ClusterExams")
  examOpenings        ExamOpening[] 
}

model Cluster {
  id                  Int               @id @default(autoincrement())
  title               String
  author              User              @relation("ClusterAuthor", fields: [authorId], references: [id])
  authorId            Int
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  visibility          ClusterVisibility @default(HIDDEN)
  exams               Exam[]            @relation("ClusterExams")
}

model ExamOpening {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  exam          Exam     @relation(fields: [examId], references: [id])
  examId        Int
  openedAt      DateTime @default(now())
}


enum UserType {
  TEACHER
  STUDENT
  ADMIN
}

enum ExamCategory {
  REVISION
  ASSIGNMENT
  BOOK
}

enum ExamLevel {
  Form1
  Form2
  Form3
  Form4
}

enum ClusterVisibility {
  HIDDEN
  VISIBLE
}
